C51 COMPILER V9.01   UART                                                                  07/03/2018 19:55:36 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN uart.obj
COMPILER INVOKED BY: D:\keilC51\C51\BIN\C51.EXE USERS\uart.c BROWSE DEBUG OBJECTEXTEND PRINT(.\uart.lst) OBJECT(uart.obj
                    -)

line level    source

   1          //=============
   2          //uart.c
   3          //=============
   4          
   5          #include "main.h"
   6          
   7          float set_distance_2 = 10.00 ;//发送这个定值，在上位机中一条直线作为参考
   8          extern float real_distance;   //发送实际距离
   9          
  10          extern PID_value  xdata ASR;  //发送pid的输出值
  11          
  12          
  13          /* ********************************************************
  14          ** 作者 ：Andrew
  15          ** 日期 ：2018.3.11    
  16          ** 说明 ：
  17                  1、使用定时器2做波特率发生器，11.0592M晶振，可以产生115200的波特率
  18                  2、使用85C52系列的单片机时，一般P3.1-TXD,   P3.0-RXD ,且与USB共地。
  19                  3、115200波特率的时候，必须使用11.0592的晶振，12M的不行，这个细节让我找了半天的bug。发疯ing 
  20                  4、12M晶振时的波特率最好时4800，误差最小。                      
  21          ******************************************************** */
  22          void uart_init()
  23          {
  24   1              SCON = 0X50;                    //SCON:串行口工作方式1, 8-bit UART,允许串行接收位(REN=1)
  25   1              TH2 = RCAP2H = 0XFF;    //baud : 115200
  26   1              TL2 = RCAP2L = 0XFD;    //0xdc 为9600 baud         ,0XFD为115200 baud
  27   1              T2CON = 0X34;                   //控制寄存器，可设置三种工作模式：捕获、计数器、波特率发生器
  28   1              IE = 0X90;                              //IE中断允许寄存器，0x90是开总中断和串口中断。
  29   1                       
  30   1      }
  31          
  32          /* *************************************
  33          ** 作者 ：Andrew
  34          ** 日期 ：2018.3.11  
  35          ** 说明 ：中断方式通过串口发送一个字符
  36          ****************************************/
  37          void uart_send_char(unsigned char _data)
  38          {
  39   1              ES = 0;                 //先关闭串口中断
  40   1              SBUF = _data;
  41   1              while(!TI);             //发送完成后，TI会置1
  42   1              TI = 0;                 //清除标志
  43   1              ES = 1;
  44   1      
  45   1      }
  46          
  47          
  48          /* *************************************
  49          ** 作者 ：Andrew
  50          ** 日期 ：2018.3.11  
  51          ** 说明 ：
  52                  1、函数入口为数据的头地址，数据的长度
  53                  2、循环发送一个长度为cnt的数据
  54          ****************************************/
C51 COMPILER V9.01   UART                                                                  07/03/2018 19:55:36 PAGE 2   

  55          void uart_send_string(unsigned char *_data,unsigned char cnt)
  56          {
  57   1              unsigned char i;
  58   1      
  59   1              for(i = 0;i<cnt;i++)
  60   1              {
  61   2                      uart_send_char(*(_data + i));   
  62   2              }
  63   1      
  64   1      }
  65          
  66          
  67          
  68          /******************************************
  69          ** 说明：
  70                  1、 发送给上位机的数据帧定义 
  71                          @桢头--功能字--长度--数据（一个或多个，具体看协议说明）-校验
  72                          @前2个字节为帧头0xAAAA 
  73                          @第3个字节为帧ID，也就是功能字，应设置为0xF1~0xFA中的一个 
  74                          @第4个字节为报文数据长度(dlc) 
  75                          @第5个字节开始到第5+dlc-1个字节为要传输的数据内容段，每个数据场为高字节在前，地字节在后 
  76                          @第5+dlc个字节为CheckSum,为第1个字节到第5+dlc-1个字节所有字节的值相加后，保留结果的低八位作为CheckSum 
  77                  2、 外部直接调用这个函数。
  78                  3、 需要在此文件中引用需要发送的其他文件中的数据。
  79                  4、 发送的数据必须是 int_16 型的数据
  80          *****************************************/  
  81          void uart_send_senser(void)
  82          {
  83   1              unsigned char  xdata data_to_send[23] = {0};
  84   1              unsigned char i = 0;
  85   1              unsigned char cnt = 0;
  86   1              unsigned char sum = 0;
  87   1      
  88   1              int int_set_distance_2 = (int)set_distance_2;
  89   1              int int_real_distance = (int)real_distance;
  90   1              int int_ASR_output = (int)ASR.output;
  91   1              
  92   1      
  93   1              data_to_send[cnt++]=0xAA;        //帧头：AAAA
  94   1              data_to_send[cnt++]=0xAA;
  95   1              data_to_send[cnt++]=0x02;        //功能字：OXFn只接受数据，不显示图像。0x0n显示数据和图像
  96   1              data_to_send[cnt++]=0;       //需要发送数据的字节数，后面计算
  97   1      
  98   1              data_to_send[cnt++] = BYTE1(int_set_distance_2);        //高字节
  99   1              data_to_send[cnt++] = BYTE0(int_set_distance_2);        //低字节
 100   1              data_to_send[cnt++] = BYTE1(int_real_distance);
 101   1              data_to_send[cnt++] = BYTE0(int_real_distance);
 102   1              data_to_send[cnt++] = BYTE1(int_ASR_output);
 103   1              data_to_send[cnt++] = BYTE0(int_ASR_output);
 104   1      
 105   1      //      data_to_send[cnt++] = BYTE1(int_set_distance_2);
 106   1      //      data_to_send[cnt++] = BYTE0(int_set_distance_2);
 107   1      //      data_to_send[cnt++] = BYTE1(int_set_distance_2);
 108   1      //      data_to_send[cnt++] = BYTE0(int_set_distance_2);
 109   1      //      data_to_send[cnt++] = BYTE1(int_set_distance_2);
 110   1      //      data_to_send[cnt++] = BYTE0(int_set_distance_2);
 111   1      //
 112   1      //      data_to_send[cnt++] = BYTE1(int_set_distance_2);
 113   1      //      data_to_send[cnt++] = BYTE0(int_set_distance_2);
 114   1      //      data_to_send[cnt++] = BYTE1(int_set_distance_2);
 115   1      //      data_to_send[cnt++] = BYTE0(int_set_distance_2);
 116   1      //      data_to_send[cnt++] = BYTE1(int_set_distance_2);
C51 COMPILER V9.01   UART                                                                  07/03/2018 19:55:36 PAGE 3   

 117   1      //      data_to_send[cnt++] = BYTE0(int_set_distance_2);
 118   1      
 119   1              data_to_send[cnt++] = 0;
 120   1              data_to_send[cnt++] = 0;
 121   1              data_to_send[cnt++] = 0;
 122   1              data_to_send[cnt++] = 0;
 123   1              data_to_send[cnt++] = 0;
 124   1              data_to_send[cnt++] = 0;
 125   1      
 126   1              data_to_send[cnt++] = 0;
 127   1              data_to_send[cnt++] = 0;
 128   1              data_to_send[cnt++] = 0;
 129   1              data_to_send[cnt++] = 0;
 130   1              data_to_send[cnt++] = 0;
 131   1              data_to_send[cnt++] = 0;
 132   1      
 133   1              data_to_send[3] = cnt-4;//计算总数据的字节数。
 134   1      
 135   1              for(i=0;i<cnt;i++) //对于for语句，当不写大括号的时候，只执行到下面第一个分号结束。
 136   1              {
 137   2                      sum+=data_to_send[i];
 138   2              }
 139   1              data_to_send[cnt++] = sum;      //计算校验位
 140   1      
 141   1              uart_send_string(data_to_send,cnt);        //发送数据包
 142   1      
 143   1      }
 144          
 145          
 146          //========================
 147          //END OF FILE
 148          //========================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    567    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
