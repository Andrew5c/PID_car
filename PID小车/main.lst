C51 COMPILER V9.01   MAIN                                                                  07/03/2018 19:55:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.obj
COMPILER INVOKED BY: D:\keilC51\C51\BIN\C51.EXE USERS\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(main.obj
                    -)

line level    source

   1          
   2          //==================
   3          //main.c
   4          //==================
   5          
   6          #include "main.h"
   7          
   8          #define if_need_display 0               //是否显示数据，调试时用，因为它比较耗单片机资源。
   9          
  10          #define T0   0.01                               //离散化采样周期，单位：s
  11          
  12          //定义一个PID调节器 ASR
  13          //data区已经满了，所以把结构体参数放在xdata区，但是如果在其他文件需要extern这个结构体的话，也要加上xdata
  14          PID_value  xdata  ASR;  
  15                  
  16          
  17          /*
  18          ** 定义控制器的参数以及输出限幅，在这里进行KP/KI的调参。
  19          ** 2018.3.16  调节T0 = 0.01，KP = 0.6，KI = 30，KD = 0.0045效果比较理想，能很快稳定，过冲不至于太大。
  20          ** PID的输出限幅在（-3，7）之间即可,根据实际情况进行设定
  21          ** (10-3)/50 = 14%         (10+7)/50 = 34%
  22          */
  23          float distance_kp = 1,
  24                    distance_ki = 35,
  25                    distance_kd = 0.0045,
  26                    limit_max = 7,                //0.002s周期下，这个范围不要变了(-3,7)
  27                    limit_min = -3;
  28          
  29          float real_distance = 0;                //实际距离
  30          uchar distance[6] = {0};                //测量距离最大为400cm，保留一位小数，如380.7cm 
  31          uchar time1_flag = 0;                   //利用pwm的定时器，中断两次就是200us，进行一次pid运算。
  32          
  33          
  34          #if (if_need_display)
              uchar code string_1[] = {"Distence"};   //8
              uchar code string_2[] = {":"};                  //1
              uchar code string_3[] = {"CM"};                 //2
              #endif
  39          
  40          
  41          //==============主函数=============
  42          int main()
  43          {
  44   1      
  45   1              #if (if_need_display)   
                      lcd_init();                      //LCD初始化
                      lcd_clear(BACK_COLOR);
                      #endif
  49   1      
  50   1              //初始化PI调节器参数全为0, 该函数在string.h
  51   1              memset(&ASR, 0, sizeof(PID_value));
  52   1      
  53   1              #if PID_DEBUG
  54   1                      ASR.KP = distance_kp;
C51 COMPILER V9.01   MAIN                                                                  07/03/2018 19:55:34 PAGE 2   

  55   1                      ASR.KI = distance_ki;
  56   1                      ASR.KD = distance_kd;
  57   1              #else
                              ASR.a0 = 1;
                              ASR.a0 = 2;
                              ASR.a0 = 3;
                      #endif
  62   1              
  63   1              ASR.T = T0;
  64   1              ASR.out_max = limit_max;
  65   1              ASR.out_min = limit_min;
  66   1              
  67   1              
  68   1              //uart_init();           //串口初始化
  69   1              sr04_init();             //超声波模块初始化
  70   1              pwm_init();                      //PWM初始化
  71   1      
  72   1      
  73   1              #if (if_need_display)
                      //显示距离格式
                      show_string(5,10,string_1);
                      show_string(5 + 64,10,string_2);
                      show_string(5 + 120,10,string_3);
                      #endif
  79   1      
  80   1              while(1)
  81   1              {
  82   2                      real_distance = get_distence(); //单位为cm的实际距离，程序开始到这里需要运行1.1s，然后不断刷新距离
  83   2      
  84   2                      if(time1_flag >= 100)                   //100*100us = 0.01s，决定pid控制器的控制周期，进行一次pid运算就是一个控制周期
  85   2                      {
  86   3                              PID_out(&real_distance);        //PID运算并输出增加占空比
  87   3                              time1_flag = 0;                         //标志清零
  88   3                      }
  89   2      
  90   2                      //uart_send_senser();                           //发送数据给匿名上位机
  91   2      
  92   2                      #if (if_need_display)
                              //使用C语言库函数 sprintf（） 把数字强制转换为字符串输出,这样真的可以减少很多工作量，比上面简单太多了。
                              sprintf(distance,"%.2f",real_distance);
                              show_string(5+72,10,distance);
                              #endif
  97   2      
  98   2              }
  99   1      }
 100          
 101          
 102          //========================
 103          //END OF FILE
 104          //========================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    133    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     64    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     31    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
