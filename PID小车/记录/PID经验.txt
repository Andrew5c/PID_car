2018.3.4  下午

控制工程专业的工科生怎么能不懂PID呢？
用51做一个智能小车，超声波测距，使用PID算法，将小车保持在距离障碍物1米处，或者任意预定的距离处。

P、I、D分别为
比例（Proportion）、
积分（Integral）、
微分（Differential）

目的在于通过这个项目。理解PID的使用与调试过程。
突然发现自己会的太少了，有点心急啊。。。。。。。


向你的对手学习。

突然发现，这个项目我去年有段时间做过，但是没有做到最后，不知道什么原因被我搁置了下来，今年都大三了，这个项目得赶紧了。

----------------------------------------------------
下面是我在去年做这个项目的时候记录的：

说明：

STC89C52   输出2路PWM波驱动两个直流电机，使车走直线。

驱动SR-04 超声波模块获取当前距离，
当距离低于一定限值的时候，小车向右转弯九十度，然后继续向前，11.2号，暂时这些功能。

先通过UART串口将获取的距离发送到电脑端，用串口助手显示。
使用UART的时候，因为在51单片机的内部有专门的通信引脚和UART模块，P3.0:RXD,   P3.1：TXD,所以只需要使能这两个引脚，
再配置相关的寄存器，就可以实现串口通信了。不需要关心中间的数据传输协议。
当然，也可以用普通I/O口模拟UART串口通信，此时不需要配置相关寄存器。但是要用软件实现其传输协议。
在51系统中，默认使用T1作为 串口的波特率发生器，且串口通信的方式1下，必须使用T1的模式2，并注意不能在使能T1的中断了。

看来是时候编写自己的常用库了 ，不然每一次都需要写真的很麻烦！！！！

为什么单片机上面有两个晶振？
12.000是给PL-2303使用的，因为usb通信需要严格的12m时钟。
单片机用11.0592晶振，这样保证串口的波特率没有误差。

2017.11.7下午：
注意使用超声波的时候不要使用串口了，串口默认定时器1，那么超声波就不要使用定时器1，不要一起用！真是傻了，还疑惑了好久。
目前为止，经过5天，已经完成了串口的发送和超声波的测距，可实现精确测量。
下面想让程序 移植到小车上，加上控制系统，给小车一个距离，利用pid算法使小车慢慢逼近设置的距离。

2017.11.8下午：
突然发现，让小车保持距离，不用pid算法也可以，在一个大循环里面，不断检修距离，如果大于设定距离就前进，小于设定距离就后退，
在一个允许的误差范围内，让小车停止

2017.11.12
之前遇到的问题浸提解决了，就是pwm输出和串口同时用了一个定时器，导致串口无法使用，所以我发输出数据。
但是今天又有了新的问题。我的printf函数里面写了printf("%.2f",re_distance);为什么还是输出一串64位的数字？
还有就是单片机执行程序是一句执行到底，然后在执行下一句，还是用1us执行完一句函数之后就开始执行下一句？
----------------------------------------------------------------


现在想着，不用串口了，因为串口占用一个定时器，直接用一个 LCD-TFT 显示屏显示 SR-04 测得的距离。


52单片机中断对应的中断号：

外部中断0（INT0）,对应中断号是0, 中断入口地址0003H
定时/计数器0（T1）,对应中断号1 ,中断入口地址000BH
外部中断1（INT1）,中断号2 入口地址0013H
定时/计数器1（T1）中断号3 入口地址001BH
串行口中（RI/TI）中断号4 入口地址0023H
这五个是AT89S51的，52还多了下面这个
定时/计数器2（T2）中断号5,入口地址002BH


2018.3.5  晚
刚刚上完现代控制理论，感觉控制真是一门很深奥的学问，PID算是控制行业里面基础的不能在基础的了，到研究生阶段，鲁棒控制就得用的得心应手了，虽然我现在还不知道鲁棒性是个什么情况。

第一次测试成功，LCD屏幕能很好的显示实时距离，刷新也很快，说明这点功能52单片机还是能胜任的，但是我发现，程序输出的距离稍有偏差，总是比实际距离小1到2厘米，是算法问题还是超声波模块不精确？
还有就是超过1米的距离测量就乱了，，明明差不多1米多的距离，测试出来是6米多，明显不对啊。


但是我还没有测试PWM的输出，现在只是第一步。后面PID才是重点。
-------------------
2018.3.6  上午

今天被别人吐槽我的程序写的效率低，数字转换没有用到C语言提供的库函数。
看来还是得多了解一下C语言提供的库函数，不然开发效率确实很低。
我都不知道 sprintf 的强制转换 。

整数与浮点数的运算结果为浮点数，运算结果总是向着高精度方向。

距离在60cm以内的时候测量距离还是很精确的，但是距离一旦超过70cm，距离就不对了，他会从1cm开始显示。当距离在两米多的时候，就直接不显示距离了。。不是最大测量距离是3.4m吗？。。。。。。。。。。。。

定时器1，CPU响应定时器溢出中断函数后，TF1中断标志位由硬件自动清零。
定时器0也一样.

提高程序的可移植性，方便自己以后开发。
----------------------
2018.3.6  下午
既然在寝室睡不着那就不要赖在床上了啊，还是来实验室学习吧。

发现keil4和keil5都可以使用外部编辑器，keil4没有代码补全真是让人难受，还是notepad舒服。

2018.3.6  晚上
感觉自己太不关心外面的事情了，一心都用在嵌入式上面了，都已经忘记了自己还没有过计算机二级呢，身边的朋友已经连计算机三级都过了。哎，有些时候，真的不想向这个社会低头，但是又害怕以后会有什么意外。

终于按照自己的理解写了一个简化版的PID控制算法，现在没有逻辑分析仪，还不知道这个程序能不能正常工作。但是还是很开心的，从一点都不懂PID，到能自己写出来一个简单版的，还是挺开心的。

------------------------------------------------
2018.3.7   下午
今天逃了一节课来实验室继续昨天的PID，因为这节课我实在是不喜欢。现在感觉实验室是我在这个学校最喜欢的地方，因为这这里我可以做我自己喜欢的事情，我会有成功的喜悦和失败的伤心，成功失败都无所谓，关键是我感觉自己在真真正正的在学习，在获取自己还不知道的知识，在锻炼自己的技能。一步一个脚印的前进，是我最想看到的样子。

浮点数因为有精度限制，最好不要直接使用 == 或 ！= 进行比较相等，但是可以使用 >  <  来比较大小。所以可以设置一个精度，把判断等于转化成 >  < 来实现。

超声波测距之前的问题，今天又好了，不用除10就是正确的距离，单位cm，而且精度还挺高。误差1cm左右。

电源的不稳定可能会导致端口输出高低电平的不稳定。

发现在10cm设定距离上面，不能前进后退，一个电机的两根控制线全是低电平，另一个电机全是与实际相反的转向。

-----------------------------------------
2018.3.8  下午

今天开始看了KennethA．Reek的《C和指针》，感觉这本书真是太好了，相见恨晚啊，之前以为这本书是C语言进阶才能看懂的，感觉自己功力还不够，所以一直就没拿来看，今天一看，这本书就是适合新手和入门的，但是也不能零基础入门，有一点点的C语言基础的基本上都能看懂这本书，但是这本书的意义不仅仅在于入门，书中很多作者的经验与看法都对我有很大的启发。才看了三章，感觉受益匪浅。决定一定把这本书认真看下去。不愧是C语言的经典书籍。

PID项目记录：
在C语言操作中，如果遇到无符号数与有符号数之间的操作，编译器会自动转化为无符号数来进行处理。
如：
 unsigned int a=20;
 signed int b=-130;
 std::cout<<a+b<<std::endl;
结果输出为4294967186，同样的道理，在运算之前，a＝20，b被转化为4294967166，所以a＋b＝4294967186

但是如果作为signed int型数据的b=-130，b与立即数之间操作时不影响b的类型，运算结果仍然为signed int型：
signed int b=-130;
std::cout<<b+30<<std::endl;
输出为-100。

晚上：

刚刚试了一下不加PID的情况，小车就像不稳定的磁铁一样，虽然能前进后退与障碍物保持位置，但是抖动在厉害，误差太大，还有可能是51的处理速度有限，不能及时响应，导致过冲现象非常严重。

由此也可以看出pid算法在控制领域的重要性，稳定快速精准，是人们对控制的不懈追求！


想到一个问题，就是这样的PID我不能很好的调整参数啊，我只能通过观察小车的运动情况，当距离变化的时候，小车能否很快的稳定在设定的距离范围内来确定PID，这样一来，会造成很不精确的问题，而且也很难判断到底该怎么修正参数。无法通过响应参数曲线观察，进而确定PID的各个参数。
如果想观察参数响应曲线，就得能在电脑上面显示实时的测量距离。首先车子是运动的，不方便通过串口线来传输，就得用到无线数据传输。电脑获取小车的实时参数之后，需要通过这些数据绘制响应曲线，观察当距离变化的时候，小车能否快速的稳定保持在与障碍物设定的距离范围上。

所以一共有两个问题：
1、数据的无线传输问题。


2、如何利用数据在电脑上绘制曲线。
匿名上位机？  C#拖控件，qt也是  python自己写上位机？用LabVIEW编写上位机，

/******************************
PID常用口诀:
参数整定找最佳，从小到大顺序查，
先是比例后积分，最后再把微分加，
曲线振荡很频繁，比例度盘要放大，
曲线漂浮绕大湾，比例度盘往小扳，
曲线偏离回复慢，积分时间往下降，
曲线波动周期长，积分时间再加长，
曲线振荡频率快，先把微分降下来，
动差大来波动慢，微分时间应加长，
理想曲线两个波，前高后低四比一，
一看二调多分析，调节质量不会低
*******************************/

----------------------------------------------------
2018.3.10  上午

昨天在搞APM，买了GPS，在等它回来，到时候再去试试。这个周末还是把PID搞一下吧。

pid的数字化实质就是 微积分的近似计算。

把系统函数转化为差分方程之后才可以通过计算机编程实现，
或许有人会问，为什么差分方程就可编程实现呢？这是因为解差分方程的一般解法就是迭代法，而迭代法只需初值跟通项公式，这在计算机编程中很容易实现。


PID增量式算法中只需对输出u(t)做限幅处理。

 
比例系数P ：反应系统当前最基本的误差，系数大，可以加快调节，减小误差，但是过大的比例使系统稳定性下降，甚至造成系统的不稳定。

积分系数I ：反应系统的累计误差，使系统消除稳态误差，提高无差度，只要有误差，积分调节就会起作用。

微分系数D ：反应系统误差的变化率，具有预见性，们可以预见偏差的变化趋势，产生超前的控制效果。因此可以改善系统的动态性能。但是微分对噪声有放大作用，会减弱系统的抗干扰性。

积分和微分都不能单独起作用。

宝贝：
http://www.cnblogs.com/cjq0301/p/5184808.html

看了这篇博客，感觉它的代码风格非常好，在想想自己的代码，差距啊，突然想把自己的代码都删掉从新来写！！！想要模仿一下，但是有不想完全照抄，加一点自己喜欢的东西，养成自己的代码风格。

2018.3.10  下午
先把pid计算的函数放在pwm定时器的中断函数里，看看效果怎么样，但是我觉得这样可能会影响pwm方波的输出。因为之前听人说过，让中断函数尽量少执行程序，不要让程序在中断里面耽误太长的时间。

如果这样不好的话，在把pid的计算函数移动到while里面，不断检测定时器的标志，到时间在进行一次pid运算。


最尴尬的就怕51写着写着就满了，还不会进行优化，垃圾代码太多。

stc89c52的数据段（DATA）不能超过128字节，多余的可以放在xdata段

果然，中断函数还是越精简越好，如果中断函数内部调用的一些函数比较复杂的话，搞不好程序就会卡死在中断函数里，如果进中断的频率很高的话，会导致程序的初始化部分都无法完成，就被卡死。
一句话，中断函数尽量简单。


发现一个问题啊，就是pid如果在定时器；里面定时进行计算的话，计算的频率不能太低，否则不能保证系统的暂态性能，但是如果频率太高，也不行，因为pid计算需要用到传感器采样反馈回来的值，所以必须要等传感器初始化并且采样第一个数据之后才能进行第一次的pid计算，这样的话，如果从传感器初始化到获取第一个数据的时间比较长的话，



2018.3.10  下午4:52
到现在为止，程序基本构造完成，就是差了pid调参，参数不是很好选，再加上小车的电机特性不是很好，占空比小于20%无法驱动电机，高于30%电机又太快，我觉得应该是电机的线性度不是很好把。

如果距离突然变的很大，小车会一下子冲过来。几乎快要顶到障碍物的时候才会停车，然后在倒车，我觉得这不仅仅是pid参数的问题，和电机也是有很大的关系的。

-----------------------------------------------
下面是参数调试记录：
------------------------------------------------
现象					KP	KI	T0(s)	

冲力过大      		 		2        1       0.002
	
震荡不是很大				2	 0        -

感觉和上面差不多			1	 0	  -

200hz抖动不是很大，可以平衡  		1        0.2      - 

一直抖动，不容易平衡			0.5	 0.5      -

抖动，比较容易平衡			0.5	 2.5      -

在上面的基础上，加了D0.1系统超调特别大

					0.5	 1	0.0002


------------------------------------------------------------

修改pwm频率试试，原先是500hz，现在改成200hz

想加上NRF24L01无线传输，小车不断发送实时数据，然后上位机接收数据通过串口发送给电脑端的匿名上位机，通过匿名软件实时显示数据波形。
尽管能做到串口的波特率为115200，但是超声波测距反馈数据的频率能达到多少？得有数据才能发呀。

可以先用一个单片机通过串口测试一下。

--------------------------------------------------------
2018.3.11  周日 上午、
现在将驱动电机的pwm信号设置为200hz，基准占空比为20%，10/50，
输出限幅为（-4 - 5），则占空比为15/50 - 6/50,30% - 12%

以后要是遇到什么问题，最好把解决方式或者思路记录下来，防止以后再次遇到这样的问题。能很好的提高自己的工作效率。这次就是匿名上位机一直接收到的误码，之前我第一次用匿名的时候也是这个样子，但是后来解决了，现在我不知道当时是怎么解决的了。。很难受。

晶振的问题。12M的晶振不能产生115200的波特率，如果非要使用这个波特率的话，上位机将一直接收的是误码，换成11.0592的晶振就可以了。

难怪之前发送6050姿态数据的时候，没有负值呢，我的发送函数之间的参数传递的全是无符号的数据，unsigned char 类型的数据，哪有负数呢。

现在的问题时距离反馈的太慢，即使有很高的波特率，但是大部分数据都是重复的。

-----------------来自知乎的一个问题----------------

https://www.zhihu.com/question/52618873

Q:
在学习PID控制规律的时候，发现网络资料上讲的比例时间、积分时间和微分时间，一会儿又是比例系数、积分系数和微分系数的，现在都搞晕了，时间常数和系数是什么关系呢

A:
本质上是一回事。叫做时间是考虑了系统的量纲。但是没有比例时间这么一说。

因为pid输出的控制信号应该和被控量或参考信号有同样的物理单位。因为在物理系统中他们是描述的同一种物理量。为了方便讨论，假设被控量是位移，单位是m, 时间单位是s

那么一个一个来看，首先没有比例时间这个说法。因为Kp*e里面误差信号e的单位和被控量是一样的。比例系数的单位是1。

微分项Kd * de/dt, 注意这里出现了1/dt，那么de/dt的单位应该是m/s，如果最终结果的单位还是m，那么Kd应该是有单位的量，单位是s。所以从单位上看Kd的物理意义是一个时间，或者说是一个无量纲的放大系数乘上了一个单位时间。所以微分系数又叫微分时间。

来看积分，我们写成离散形式可以看得更清楚: I = I + Ki * e * dt, 这里乘了一个dt, 因此第二项乘积分系数之前的单位是m*s，为了是最终单位是m，Ki必须有单位1/s。为了避免这个意义不清的单位我们可以整理成倒数形式 I + 1/Ti * e * dt，这里的Ti就是积分时间，单位是s，等于积分系数的倒数。

总结：

比例系数---KP

积分系数---KI	倒数	积分时间   Ti

微分系数---KD	相等	微分时间   Td


一直在调，但是不知道什么样子才是一个最佳，有时候改变比例系数和积分系数看不到明显的改变。有点找不到方向的感觉。

本来想用NRF24L01来无线传输超声波获取的实时距离来着，但是发现如果用51单片机驱动这个芯片的话，很不方便。一个是电源电压的问题，一个是数据口电压问题。电源电压可以使用降压芯片或者二极管来实现。数据口最好接一个10K的下拉电阻，让端口的5V电压降低到3.3V以下。防止烧坏芯片。

搭电路的话有点麻烦，要是会自己画板子就好了。

关于pid调节，一个大佬给的一点经验：
	大体上是这个架构，采集，然后计算，但是有几个要注意得问题，不注意这些，可能永远调不好PID或者调出来得不理想，首先你的传感器响应速度？以及执行单元执行到温度传感器得时间是多少，这个要去测量一下比如我加热单元开始加热，我需要0.5得控制精度，那么我从开始加热到传感器发现温度变化0.5所需得时间，t，那么就以这个得0.3-0.6去做采集时间，并以这个采集时间得3-5倍去作为PID计算得时间，并把这个时间，和Ki,Kd系数做一个处理。

但是我发现这里面说的一些量我根本没法测量啊。

需要调节的量不止  KP KI  啊，还有pwm的输出限幅的大小，pwm频率的影响，pid的控制周期，都会影响pid的效果吗？

51有默认的中断优先级
在有中断标志时，MCU查询的顺序是：
外部中断0、定时器中断0、外部中断1、定时器中断1、串口中断。

----------------------------------------------------------
2018.3.15  上午
这几天一直在忙着搞四轴，把这个项目给耽误了一段时间。我打算在这个周末把这个项目给彻底结题。然后写一篇pid调节的掐死教程。以祭奠我在pid上用掉的那么多时间和脑力。

PID参数的整定方式：
1、理论计算法：采用被控对象的准确模型进行数学建模。
2、工程整定法：不依赖被控对象的数学模型，直接在控制系统中进行现场整定，也就是现场调试。

但是如果什么都不知道，仅仅是对系统盲目的测试，不仅浪费时间，调准的可能性也很小。崔老师说，首先还是需要建立系统的整体数学模型，才能很好的调节参数。

发现有的pid运算中加入了pid的采样周期，就是计算两次pid之间的间隔时间。有的算法里面就没有这个，直接带入误差计算。这是为什么？这两个一样吗？

增量式pid的式子就一个，同样的迭代式，同样的项，不同的人在不同的程序中取不同的名字，而初学者又容易吧相同名字的变量当成一个东西，以为所有编写代码的人都像商量好一样遵守同样的原则，但是现实中你看到的代码往往事与愿违。不规范的程序到处都是。容易让人产生误解。


如果阶跃响应的超调量太大，经过多次振荡才能稳定或者根本不稳定，应减小比例系数、增大积分时间。

我的程序里面KI乘了采样周期0.002，所以KI不能太小，不然几乎没有影响，必须得达到整数，KI至少得500左右，KD除了0.002，相当于乘了500，所以一开始我设置KD为1的时候，还以为KD 很小，其实他已经大的不能在大了！！所以KD得很小，得在0.002左右

0.1  500  超调量不大，但是回复很慢，震荡频繁。
0.2  400  超调量不大，回复稍微快一点


--------------------------------------
2018.3.16  上午
什么时候用PI？什么时候又能用PD？区别？